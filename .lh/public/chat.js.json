{
    "sourceFile": "public/chat.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1744134587619,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1744134940972,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,9 +20,9 @@\n             contentDiv.textContent = 'Przepraszam, wystąpił błąd. ';\r\n             \r\n             const errorSpan = document.createElement('span');\r\n             errorSpan.className = 'error';\r\n-            errorSpan.textContent = `Błąd połączenia: ${content}`;\r\n+            errorSpan.textContent = \"Błąd połączenia: \" + content;\r\n             contentDiv.appendChild(errorSpan);\r\n             \r\n             const timeDiv = document.createElement('div');\r\n             timeDiv.className = 'message-time';\r\n"
                }
            ],
            "date": 1744134587618,
            "name": "Commit-0",
            "content": "// Chat functionality\r\ndocument.addEventListener('DOMContentLoaded', function() {\r\n    const chatMessages = document.getElementById('chat-messages');\r\n    const userInput = document.getElementById('user-input');\r\n    const sendButton = document.getElementById('send-button');\r\n    const imageUpload = document.getElementById('image-upload');\r\n    const imagePreview = document.getElementById('image-preview');\r\n    const removeImageBtn = document.getElementById('remove-image');\r\n    const loadingIndicator = document.getElementById('loading-indicator');\r\n    \r\n    let selectedImage = null;\r\n    \r\n    // Function to add a message to the chat\r\n    function addMessage(content, isUser = false, isError = false) {\r\n        const messageDiv = document.createElement('div');\r\n        messageDiv.className = isUser ? 'message user-message' : 'message bot-message';\r\n        \r\n        if (isError) {\r\n            const contentDiv = document.createElement('div');\r\n            contentDiv.textContent = 'Przepraszam, wystąpił błąd. ';\r\n            \r\n            const errorSpan = document.createElement('span');\r\n            errorSpan.className = 'error';\r\n            errorSpan.textContent = `Błąd połączenia: ${content}`;\r\n            contentDiv.appendChild(errorSpan);\r\n            \r\n            const timeDiv = document.createElement('div');\r\n            timeDiv.className = 'message-time';\r\n            timeDiv.textContent = new Date().toLocaleTimeString();\r\n            \r\n            messageDiv.appendChild(contentDiv);\r\n            messageDiv.appendChild(timeDiv);\r\n        } else {\r\n            // Check if content contains HTML (for markdown rendering)\r\n            if (typeof content === 'string' && content.includes('<')) {\r\n                const contentDiv = document.createElement('div');\r\n                contentDiv.innerHTML = content;\r\n                messageDiv.appendChild(contentDiv);\r\n            } else {\r\n                const contentDiv = document.createElement('div');\r\n                contentDiv.textContent = content;\r\n                messageDiv.appendChild(contentDiv);\r\n            }\r\n            \r\n            const timeDiv = document.createElement('div');\r\n            timeDiv.className = 'message-time';\r\n            timeDiv.textContent = new Date().toLocaleTimeString();\r\n            messageDiv.appendChild(timeDiv);\r\n        }\r\n        \r\n        chatMessages.appendChild(messageDiv);\r\n        chatMessages.scrollTop = chatMessages.scrollHeight;\r\n    }\r\n    \r\n    // Function to handle image upload\r\n    function handleImageUpload(e) {\r\n        const file = e.target.files[0];\r\n        if (file) {\r\n            selectedImage = file;\r\n            const reader = new FileReader();\r\n            reader.onload = function(e) {\r\n                imagePreview.src = e.target.result;\r\n                imagePreview.style.display = 'block';\r\n                removeImageBtn.style.display = 'block';\r\n            };\r\n            reader.readAsDataURL(file);\r\n        }\r\n    }\r\n    \r\n    // Function to remove selected image\r\n    function removeSelectedImage() {\r\n        selectedImage = null;\r\n        imageUpload.value = '';\r\n        imagePreview.src = '';\r\n        imagePreview.style.display = 'none';\r\n        removeImageBtn.style.display = 'none';\r\n    }\r\n    \r\n    // Function to send message to the server\r\n    async function sendMessage() {\r\n        const message = userInput.value.trim();\r\n        if (!message && !selectedImage) return;\r\n        \r\n        // Add user message to chat\r\n        addMessage(message, true);\r\n        \r\n        // Clear input\r\n        userInput.value = '';\r\n        \r\n        // Show loading indicator\r\n        loadingIndicator.style.display = 'block';\r\n        \r\n        try {\r\n            // Create form data for the request\r\n            const formData = new FormData();\r\n            formData.append('message', message);\r\n            \r\n            if (selectedImage) {\r\n                formData.append('image', selectedImage);\r\n                // Add image preview to chat\r\n                const imageMsg = document.createElement('div');\r\n                imageMsg.className = 'message user-message';\r\n                \r\n                const img = document.createElement('img');\r\n                img.src = URL.createObjectURL(selectedImage);\r\n                img.className = 'chat-image';\r\n                img.alt = 'Uploaded image';\r\n                \r\n                imageMsg.appendChild(img);\r\n                chatMessages.appendChild(imageMsg);\r\n                \r\n                // Clear image preview\r\n                removeSelectedImage();\r\n            }\r\n            \r\n            // Send request to server\r\n            const response = await fetch('/api/chat', {\r\n                method: 'POST',\r\n                body: formData\r\n            });\r\n            \r\n            if (response.ok) {\r\n                const data = await response.json();\r\n                // Add bot response to chat\r\n                addMessage(data.response);\r\n            } else {\r\n                throw new Error('Server responded with an error');\r\n            }\r\n        } catch (error) {\r\n            // Handle error\r\n            addMessage(error.message, false, true);\r\n        } finally {\r\n            // Hide loading indicator\r\n            loadingIndicator.style.display = 'none';\r\n        }\r\n    }\r\n    \r\n    // Event listeners\r\n    if (sendButton) {\r\n        sendButton.addEventListener('click', sendMessage);\r\n    }\r\n    \r\n    if (userInput) {\r\n        userInput.addEventListener('keydown', function(e) {\r\n            if (e.key === 'Enter' && !e.shiftKey) {\r\n                e.preventDefault();\r\n                sendMessage();\r\n            }\r\n        });\r\n    }\r\n    \r\n    if (imageUpload) {\r\n        imageUpload.addEventListener('change', handleImageUpload);\r\n    }\r\n    \r\n    if (removeImageBtn) {\r\n        removeImageBtn.addEventListener('click', removeSelectedImage);\r\n    }\r\n    \r\n    // Set focus on input field\r\n    if (userInput) {\r\n        userInput.focus();\r\n    }\r\n});"
        }
    ]
}